# https://github.com/messense/crfs-rs/blob/main/.github/workflows/Python.yml
# MIT: https://github.com/messense/crfs-rs/blob/main/LICENSE

name: Upload Python Packages

on:
  push:
  pull_request:
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
          architecture: x64
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true
      - name: Build wheels - x86_64
        uses: messense/maturin-action@v1
        with:
          target: x86_64
          args: --release --out dist --sdist -m Cargo.toml
      - name: Install built wheel - x86_64
        run: |
          pip install rdp_rust --no-index --find-links dist --force-reinstall
          python -c "import rdp_rust"
      - name: Build wheels - universal2
        uses: messense/maturin-action@v1
        with:
          args: --release --universal2 --out dist -m Cargo.toml
      - name: Install built wheel - universal2
        run: |
          pip install rdp_rust --no-index --find-links dist --force-reinstall
          python -c "import rdp_rust"
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
          architecture: ${{ matrix.target }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true
      - name: Pip Upgrade
        run: python -m pip install --upgrade pip
      - name: PipEnv Install
        run: pip install pipenv==2021.5.29
      - name: Install Python Dependencies
        run: pipenv install --dev --system
      - name: Build Rust
        run: cargo build
      - name: Run Rust Tests
        run: cargo test
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist -m Cargo.toml
      - name: Install built wheel
        run: |
          pip install rdp_rust --no-index --find-links dist --force-reinstall
          python -c "import rdp_rust"
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, i686]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
        architecture: x64
    - name: Pip Upgrade
      run: python -m pip install --upgrade pip
    - name: PipEnv Install
      run: pip install pipenv==2021.5.29
    - name: Install Python Dependencies
      run: pipenv install --dev --system
    - name: Build Rust
      run: cargo build
    - name: Run Rust Tests
      run: cargo test
    - name: Build wheels
      uses: messense/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: auto
        args: --release --out dist -m Cargo.toml
    - name: Install built wheel
      if: matrix.target == 'x86_64'
      run: |
        pip install rdp_rust --no-index --find-links dist --force-reinstall
        python -c "import rdp_rust"
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist


  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ macos, windows, linux, ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Publish to PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
          REPOSITORY_URL: ${{ secrets.REPOSITORY_URL }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing *
