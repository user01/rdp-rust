name: Upload Python Packages

on:
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9, "3.10"]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Pip Upgrade
      run: python -m pip install --upgrade pip
    - name: PipEnv Install
      run: pip install pipenv==2021.5.29
    - name: Install Python Dependencies
      run: pipenv install --dev --system
    - name: Build Rust
      run: cargo build
    - name: Run Rust Tests
      run: cargo test
    - name: Build wheel
      run: maturin build --release --no-sdist
    - name: Install wheel
      run: pip install $(python -c "import platform; import glob; print(glob.glob(f'target/wheels/*cp3{platform.python_version_tuple()[1]}*.whl')[0])")
    - name: Windows Install PyTest
      run: pip install --upgrade --force-reinstall pytest
      if: contains(matrix.os, 'windows')
    - name: Run Python Tests
      run: pytest -x -rws -vv test_options.py
    - name: Publish
      env:
        MATURIN_USERNAME: __token__
        MATURIN_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        REPOSITORY_URL: ${{ secrets.REPOSITORY_URL }}
      run: maturin publish --no-sdist --username __token__ --repository-url $REPOSITORY_URL --skip-existing
